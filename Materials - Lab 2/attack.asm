global _start

section .text

_start:

	xor eax, eax

	push eax ; PUSH 0x00000000 which is equivalent to NULL

	 ; PUSH //bin/ls -> sl/nib//
	 ; 0x 73 6c 2f 6e 69 62 2f 2f

	 push 0x736c2f6e
	 push 0x69622f2f


	mov ebx, esp	 ; EBX points to //bin/ls which is located at the top of the stack (ESP)
	 							 ; This refers to the first parameter of execve

	push eax ; PUSH 0x00000000 =NULL.

	mov edx, esp; EDX points to NULL which is located at the top of the stack (ESP)
	; This refers to the third parameter


	push ebx; PUSH address of //bin/ls on the stack (recall that EBX is pointing to this address)

	mov ecx, esp ; ECX points to address of //bin/ls. This refers to the second parameter
	push ecx
	push edx
	; execve is executed. Recall that EAX is reserved for system call

	mov al, 11
	;Execution is performed
	int 0x80
